eucl <- distance_matrix(t(order_scaled), "EUCL")
order <-
agg_pad %>%
pivot_wider(id_cols = trip_start,
names_from = pickup_community_area,
values_from = total_order) %>%
column_to_rownames(var="trip_start")
head(order)
order_scaled <- scale(order)
matplot(order_scaled, type = 'l')
subset_area <- c('32','8')
subset_order_scaled <- order_scaled[,subset_area]
matplot(subset_order_scaled, type = 'l')
legend("topright", colnames(subset_order_scaled),
col = seq_len(length(subset_area)),
lty = seq_len(length(subset_area)))
distance_matrix <- function(mat, method, dendrogram = F){
dm <- diss(SERIES = mat, METHOD = method)
print(summary(dm))
heatmap.2(as.matrix(dm), trace = "none",
Colv = dendrogram, Rowv = dendrogram)
return(dm)
}
eucl <- distance_matrix(t(order_scaled), "EUCL")
order <-
agg_pad %>%
pivot_wider(id_cols = trip_start,
names_from = pickup_community_area,
values_from = total_order) %>%
column_to_rownames(var="trip_start") %>%
mutate_if(is.numeric, ~replace_na(data = ., replace = 0))
head(order)
n_order_example <- data.frame(day = as.Date(c('2016-10-21', '2016-10-23', '2016-10-26')),
order = c(304.46, 414.76, 378.98))
n_order_example
n_order_example
pad(n_order_example)
agg_pad <-
agg %>%
pad(group = "pickup_community_area",
start_val = range(agg$trip_start)[1],
end_val = range(agg$trip_start)[2]) %>%
fill_by_value() %>%
arrange(pickup_community_area, trip_start)
agg_pad
agg <-
df %>%
filter(pickup_community_area != 'NA') %>%
mutate(trip_start = as.Date(as.yearmon(trip_start_timestamp)),
pickup_community_area = as.factor(as.numeric(pickup_community_area))) %>%
group_by(trip_start, pickup_community_area) %>%
summarise(total_order = n()) %>%
ungroup()
agg_pad <-
agg %>%
pad(group = "pickup_community_area",
start_val = range(agg$trip_start)[1],
end_val = range(agg$trip_start)[2]) %>%
fill_by_value() %>%
arrange(pickup_community_area, trip_start)
agg_pad
range(agg$trip_start)[1]
range(agg$trip_start)[2])
range(agg$trip_start)[2]
range(agg$trip_start)[1]
agg_pad
range(agg$trip_start)[1]
agg_pad
agg <-
df %>%
filter(pickup_community_area != 'NA') %>%
mutate(trip_start = as.Date(as.yearmon(trip_start_timestamp)),
pickup_community_area = as.factor(as.numeric(pickup_community_area))) %>%
group_by(trip_start, pickup_community_area) %>%
summarise(total_order = n()) %>%
ungroup()
agg_pad <-
agg %>%
pad(group = "pickup_community_area",
start_val = range(agg$trip_start)[1],
end_val = range(agg$trip_start)[2]) %>%
# fill_by_value() %>%
arrange(pickup_community_area, trip_start)
agg_pad
agg
agg <-
df %>%
filter(pickup_community_area != 'NA') %>%
mutate(trip_start = as.Date(as.yearmon(trip_start_timestamp)),
pickup_community_area = as.factor(as.numeric(pickup_community_area))) %>%
group_by(trip_start, pickup_community_area) %>%
summarise(total_order = n()) %>%
ungroup()
agg_pad <-
agg %>%
pad(group = "pickup_community_area",
start_val = range(agg$trip_start)[1],
end_val = range(agg$trip_start)[2]) %>%
fill_by_value() %>%
arrange(pickup_community_area, trip_start)
agg_pad
df <- readRDS("data/taxy_cgg.RDS")
glimpse(df)
agg <-
df %>%
filter(pickup_community_area != 'NA') %>%
mutate(trip_start = as.Date(as.yearmon(trip_start_timestamp)),
pickup_community_area = as.factor(as.numeric(pickup_community_area))) %>%
group_by(trip_start, pickup_community_area) %>%
summarise(total_order = n()) %>%
ungroup()
agg_pad <-
agg %>%
pad(group = "pickup_community_area",
start_val = range(agg$trip_start)[1],
end_val = range(agg$trip_start)[2]) %>%
fill_by_value() %>%
arrange(pickup_community_area, trip_start)
agg_pad
agg_pad
agg <- df %>%
filter(pickup_community_area != 'NA') %>%
mutate(trip_start = as.Date(as.yearmon(trip_start_timestamp)),
pickup_community_area = as.factor(as.numeric(pickup_community_area))) %>%
group_by(trip_start, pickup_community_area) %>%
summarise(total_order = n()) %>%
ungroup()
agg_pad <- agg %>%
pad(group = "pickup_community_area",
start_val = range(agg$trip_start)[1],
end_val = range(agg$trip_start)[2]) %>%
fill_by_value() %>%
arrange(pickup_community_area, trip_start)
agg_pad
agg <-
df %>%
filter(pickup_community_area != 'NA') %>%
mutate(trip_start = as.Date(as.yearmon(trip_start_timestamp)),
pickup_community_area = as.factor(as.numeric(pickup_community_area))) %>%
group_by(trip_start, pickup_community_area) %>%
summarise(total_order = n()) %>%
ungroup()
agg_pad <-
agg %>%
pad(group = "pickup_community_area",
start_val = range(agg$trip_start)[1],
end_val = range(agg$trip_start)[2]) %>%
fill_by_value()
agg_pad
agg <-
df %>%
filter(pickup_community_area != 'NA') %>%
mutate(trip_start = as.Date(as.yearmon(trip_start_timestamp)),
pickup_community_area = as.factor(as.numeric(pickup_community_area))) %>%
group_by(trip_start, pickup_community_area) %>%
summarise(total_order = n()) %>%
ungroup()
agg_pad <-
agg %>%
padr::pad(group = "pickup_community_area",
start_val = range(agg$trip_start)[1],
end_val = range(agg$trip_start)[2]) %>%
fill_by_value()
agg_pad
# clean up the environment
rm(list = ls())
# setup chunk options
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
fig.align = "center",
comment = "#>"
)
options(scipen = 9999)
library(tidyverse)
library(lubridate)
library(RSocrata)
library(tidyverse)
library(lubridate)
library(zoo)
library(padr)
library(imputeTS)
library(ggplot2)
library(plotly)
library(tibble)
library(TSclust)
library(gplots)
library(cluster)
library(factoextra)
library(dendextend)
df <- readRDS("data/taxy_cgg.RDS")
glimpse(df)
n_order_example <- data.frame(day = as.Date(c('2016-10-21', '2016-10-23', '2016-10-26')),
order = c(304.46, 414.76, 378.98))
n_order_example
agg <-
df %>%
filter(pickup_community_area != 'NA') %>%
mutate(trip_start = as.Date(as.yearmon(trip_start_timestamp)),
pickup_community_area = as.factor(as.numeric(pickup_community_area))) %>%
group_by(trip_start, pickup_community_area) %>%
summarise(total_order = n()) %>%
ungroup()
agg_pad <-
agg %>%
padr::pad(group = "pickup_community_area",
start_val = range(agg$trip_start)[1],
end_val = range(agg$trip_start)[2]) %>%
fill_by_value()
agg_pad
range(agg$trip_start)[1]
agg_pad <-
agg %>%
group_by(pickup_community_area) %>%
padr::pad(
start_val = range(agg$trip_start)[1],
end_val = range(agg$trip_start)[2]) %>%
fill_by_value()
agg_pad
agg_pad <-
agg %>%
group_by(pickup_community_area) %>%
pad(
start_val = range(agg$trip_start)[1],
end_val = range(agg$trip_start)[2]) %>%
fill_by_value()
ts_ggplot <-
ggplot(agg_pad,
aes(x = trip_start,
y = total_order,
color = pickup_community_area)) +
geom_line() +
labs(title = "Monthly Taxi Order by Area") +
scale_color_viridis_d() +
theme_minimal() +
theme(
legend.position = "none"
)
ggplotly(ts_ggplot)
order <-
agg_pad %>%
pivot_wider(id_cols = trip_start,
names_from = pickup_community_area,
values_from = total_order) %>%
column_to_rownames(var="trip_start")
head(order)
order_scaled <- scale(order)
matplot(order_scaled, type = 'l')
subset_area <- c('32','8')
subset_order_scaled <- order_scaled[,subset_area]
matplot(subset_order_scaled, type = 'l')
legend("topright", colnames(subset_order_scaled),
col = seq_len(length(subset_area)),
lty = seq_len(length(subset_area)))
distance_matrix <- function(mat, method, dendrogram = F){
dm <- diss(SERIES = mat, METHOD = method)
print(summary(dm))
heatmap.2(as.matrix(dm), trace = "none",
Colv = dendrogram, Rowv = dendrogram)
return(dm)
}
eucl <- distance_matrix(t(order_scaled), "EUCL")
dtw <- distance_matrix(t(order_scaled), "DTWARP")
agg_pad
agg_pad %>%
filter(pickup_community_area %in% c(10, 68))
agg_pad %>%
filter(pickup_community_area %in% c(10, 68)) %>%
ggplot(aes(trip_start, total_order)) +
geom_line(aes(col = pickup_community_area))
agg_pad %>%
filter(pickup_community_area %in% c(32, 8)) %>%
ggplot(aes(trip_start, total_order)) +
geom_line(aes(col = pickup_community_area))
agg_pad %>%
filter(pickup_community_area %in% c(10, 71)) %>%
ggplot(aes(trip_start, total_order)) +
geom_line(aes(col = pickup_community_area))
agg_pad %>%
filter(pickup_community_area %in% c(32, 8)) %>%
ggplot(aes(trip_start, total_order)) +
geom_line(aes(col = pickup_community_area))
agg_pad %>%
filter(pickup_community_area %in% c(4, 30)) %>%
ggplot(aes(trip_start, total_order)) +
geom_line(aes(col = pickup_community_area))
autplot(order_scales)
head(order_scaled)
forecast::autoplot(order_scales)
order_scaled <- scale(order)
forecast::autoplot(order_scales)
forecast::autoplot(order_scaled)
order_scaled <- scale(order)
order_scaled <- scale(order)
matplot(order_scaled, type = 'l')
subset_area <- c('32','8')
subset_order_scaled <- order_scaled[,subset_area]
matplot(subset_order_scaled, type = 'l')
legend("topright", colnames(subset_order_scaled),
col = seq_len(length(subset_area)),
lty = seq_len(length(subset_area)))
subset_area <- c('32','8')
subset_order_scaled <- order_scaled[,subset_area]
matplot(subset_order_scaled, type = 'l')
legend("topright", colnames(subset_order_scaled),
col = seq_len(length(subset_area)),
lty = seq_len(length(subset_area)))
order_scaled <- scale(order)
matplot(order_scaled, type = 'l')
distance_matrix <- function(mat, method, dendrogram = F){
dm <- diss(SERIES = mat, METHOD = method)
print(summary(dm))
heatmap.2(as.matrix(dm), trace = "none",
Colv = dendrogram, Rowv = dendrogram)
return(dm)
}
distance_matrix <- function(mat, method, dendrogram = F){
dm <- diss(SERIES = mat, METHOD = method)
print(summary(dm))
heatmap.2(as.matrix(dm), trace = "none",
Colv = dendrogram, Rowv = dendrogram)
return(dm)
}
eucl <- distance_matrix(t(order_scaled), "EUCL")
dtw <- distance_matrix(t(order_scaled), "DTWARP")
knitr::include_graphics("assets/dtw-euclidan.png")
knitr::include_graphics("assets/euclidean.png")
knitr::include_graphics("assets/Time_Series_Clustering.png")
# clean up the environment
rm(list = ls())
# setup chunk options
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
fig.align = "center",
comment = "#>"
)
options(scipen = 9999)
knitr::include_graphics("assets/Time_Series_Clustering.png")
knitr::include_graphics("assets/euclidean.png")
knitr::include_graphics("assets/euclidean.png")
# clean up the environment
rm(list = ls())
# setup chunk options
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
fig.align = "center",
comment = "#>"
)
options(scipen = 9999)
knitr::include_graphics("assets/Time_Series_Clustering.png")
library(tidyverse)
library(lubridate)
library(RSocrata)
library(tidyverse)
library(lubridate)
library(zoo)
library(padr)
library(imputeTS)
library(ggplot2)
library(plotly)
library(tibble)
library(TSclust)
library(gplots)
library(cluster)
library(factoextra)
library(dendextend)
knitr::include_graphics("assets/euclidean.png")
knitr::include_graphics("assets/dtw-euclidan.png")
df <- readRDS("data/taxy_cgg.RDS")
glimpse(df)
n_order_example <- data.frame(day = as.Date(c('2016-10-21', '2016-10-23', '2016-10-26')),
order = c(304.46, 414.76, 378.98))
n_order_example
pad(n_order_example)
agg <-
df %>%
filter(pickup_community_area != 'NA') %>%
mutate(trip_start = as.Date(as.yearmon(trip_start_timestamp)),
pickup_community_area = as.factor(as.numeric(pickup_community_area))) %>%
group_by(trip_start, pickup_community_area) %>%
summarise(total_order = n()) %>%
ungroup()
agg_pad <-
agg %>%
group_by(pickup_community_area) %>%
pad(
start_val = range(agg$trip_start)[1],
end_val = range(agg$trip_start)[2]) %>%
fill_by_value()
agg_pad
ts_ggplot <-
ggplot(agg_pad,
aes(x = trip_start,
y = total_order,
color = pickup_community_area)) +
geom_line() +
labs(title = "Monthly Taxi Order by Area") +
scale_color_viridis_d() +
theme_minimal() +
theme(
legend.position = "none"
)
ggplotly(ts_ggplot)
order <-
agg_pad %>%
pivot_wider(id_cols = trip_start,
names_from = pickup_community_area,
values_from = total_order) %>%
column_to_rownames(var="trip_start")
head(order)
order_scaled <- scale(order)
matplot(order_scaled, type = 'l')
subset_area <- c('32','8')
subset_order_scaled <- order_scaled[,subset_area]
matplot(subset_order_scaled, type = 'l')
legend("topright", colnames(subset_order_scaled),
col = seq_len(length(subset_area)),
lty = seq_len(length(subset_area)))
distance_matrix <- function(mat, method, dendrogram = F){
dm <- diss(SERIES = mat, METHOD = method)
print(summary(dm))
heatmap.2(as.matrix(dm), trace = "none",
Colv = dendrogram, Rowv = dendrogram)
return(dm)
}
eucl <- distance_matrix(t(order_scaled), "EUCL")
dtw <- distance_matrix(t(order_scaled), "DTWARP")
knitr::include_graphics("assets/dendrogram.png")
par(mfrow = c(1, 2))
eucl_agnes <- agnes(eucl)
plot(eucl_agnes, main = "Euclidean Distance", which.plots = 2)
dtw_agnes <- agnes(dtw)
plot(dtw_agnes, main = "Dynamic Time Warping", which.plots = 2)
par(mfrow = c(1, 2))
plot(eucl_agnes, which.plots = 1, nmax.lab = Inf)
plot(dtw_agnes, which.plots = 1, nmax.lab = Inf)
knitr::include_graphics("assets/linkage.jpg")
par(mfrow = c(1, 3))
dtw_agnes_complete <- agnes(dtw, method = "complete")
plot(dtw_agnes_complete, main = "Complete Linkage", which.plots = 2)
dtw_agnes_single <- agnes(dtw, method = "single")
plot(dtw_agnes_single, main = "Single Linkage", which.plots = 2)
dtw_agnes_average <- agnes(dtw, method = "average")
plot(dtw_agnes_average, main = "Average Linkage", which.plots = 2)
# your code here
par(mfrow = c(1, 2))
plot(dtw_agnes_complete, main = "DTW Agglomerative", which.plots = 2)
dtw_diana <- diana(dtw)
plot(dtw_diana, main = "DTW Divisive", which.plots = 2)
par(mfrow = c(1, 2))
plot(dtw_agnes_complete, which.plots = 1, nmax.lab = Inf)
plot(dtw_diana, which.plots = 1, nmax.lab = Inf)
plot(dtw_agnes_complete, main = "DTW Agglomerative", which.plots = 2) # dendrogram
abline(h = 55, lty = 2, col = "red") # cut level
rect.hclust(dtw_agnes_complete, k = 2, border = 3:4) # bounding box
clust_k <- cutree(as.hclust(dtw_agnes_complete), k = 2)
clust_h <- cutree(as.hclust(dtw_agnes_complete), h = 55)
all(clust_k == clust_h) # should produce the same results
fviz_nbclust(x = t(order_scaled),
FUN = hcut,
method = "wss",
diss = dtw_agnes_complete$diss)
hc <- cutree(dtw_agnes_complete, k = 2)
sil <- silhouette(hc, dtw)
plot(sil, col = 3:4, nmax.lab = 48)
summary(sil)
silhouette_plot <- function(hc, distance) {
s <- NULL
n <- nrow(distance)
for(k in 2:(n-1)) {
sil <- silhouette(cutree(hc, k=k), distance)
s[k] <- summary(sil)$si.summary[4] # average silhouette width
}
df <- data.frame(k = 2:(n-1), sil = s[-1]) %>%
arrange(desc(sil))
p <- df %>%
ggplot(aes(x = k, y = sil)) +
geom_line(color = 'blue') +
geom_vline(xintercept = head(df, 1)$k, alpha = 0.5) +
geom_point(size = 0.75) +
labs(x = "Number of clusters k",
y = "Average silhouette width") +
theme_classic()
ggplotly(p) %>%
layout(
xaxis = list(showspikes = T),
yaxis = list(showspikes = T))
}
silhouette_plot(dtw_agnes_complete, dtw)
dend_viz <- color_branches(as.hclust(dtw_agnes_complete), k = 3)
plot(dend_viz)
final_cluster <- cutree(as.hclust(dtw_agnes_complete), k = 3)
cluster_mapping <-
rownames_to_column(as.data.frame(final_cluster),
var = "pickup_community_area") %>%
rename(cluster = final_cluster)
cluster_mapping
clustered_order_agnes <-
agg_pad %>%
left_join(cluster_mapping, by = "pickup_community_area")
ggplot(data = clustered_order_agnes,
aes(x = trip_start, y = total_order,
group = pickup_community_area,
color = factor(cluster))) +
geom_line() +
geom_line(data = clustered_order_agnes %>%
group_by(cluster, trip_start) %>%
summarize(total_order = mean(total_order)),
aes(group=1), alpha = 0.7, lwd = 2) +
facet_grid(rows = vars(cluster), scales = 'free')
